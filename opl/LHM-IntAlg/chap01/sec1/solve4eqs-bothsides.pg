## DESCRIPTION
## University of Wisconsin-La Crosse Problem Library Template
## For assistance, contact Sam Morris at <smorris@uwlax.edu>
## or Robert Allen at <rallen@uwlax.edu>
## ENDDESCRIPTION

## DBsubject(Algebra)
## DBchapter(Algebra of real numbers and simplying equations)
## DBsection(Solving linear equations in one variable)
## KEYWORDS('solving linear equations')
## TitleText1('Intermediate Algebra')
## EditionText1('12')
## AuthorText1('Lial, Hornsby, McGinnis')
## Chapter1('1')
## Section1('1.1')
## Problem1('Solve Equation 1')
## Author('Sam Morris, Robert Allen')
## Institution('University of Wisconsin-La Crosse')

DOCUMENT();   #This MUST be the first (non-commented) line of the file.
loadMacros("uwlLoadWWMacros.pl",
           "uwlLoadMacros.pl",
           "uwlAlgMacros.pl"
);

TEXT(beginproblem());

#### Identify the contexts for this question
Context("Numeric");
Context()->texStrings;  # will automatically format math objects using tex

#### Build the question and get the answer
## How many different equations do we want
$giveMe = 4;
$clt = "Combine like terms";
$solcol = "OrangeRed";

## Get the parts that will make the equations
rserve_eval('possible <- c(seq(-8, -3), seq(3, 8))
             offsets <- c(seq(-3, -2), seq(2, 3))');
# @a = rserve_eval('sample(x = possible[possible > 0], size = ' . $giveMe . ', replace = FALSE)');
@a = uwlAlgMacros::random_number(
  n => $giveMe,
  min => 3,
  max => 8,
  replace => "FALSE",
);
# @b = rserve_eval('sample(x = possible, size = ' . $giveMe . ', replace = FALSE)');
@b = uwlAlgMacros::random_number(
  n => $giveMe,
  min => -8,
  max => 8,
  zero => "FALSE",
  one => "FALSE",
  replace => "FALSE"
);

# @x = rserve_eval('sample(x = 3:10, size = ' . $giveMe . ', replace = TRUE)'); # the answers
@x = uwlAlgMacros::random_number(
  n => $giveMe,
  min => 3,
  max => 10,
  replace => "TRUE",
);

# @offset = rserve_eval('sample(x = offsets, size = ' . $giveMe .', replace = TRUE)');
@offset = uwlAlgMacros::random_number(
  n => $giveMe,
  min => -3,
  max => 3,
  zero => "FALSE",
  one => "FALSE",
  replace => "TRUE",
);
@c; @d; @e;
foreach $i (0..($giveMe - 1)) {
  push(@d, $offset[$i] * $x[$i] + $b[$i]);
  push(@c, $a[$i] - $offset[$i]);
  push(@e, $d[$i] - $b[$i]);
}

foreach $i (0..($giveMe-1)) {
  # update the index
  $idx = $i + 1;
#  $offset = non_zero_random(-2, 2, 1);
#  $c = $a[$i] - $offset;

  # $h = Formula("$offset[$i] x + $b[$i]")->reduce;
  $d = Compute("$offset[$i] * $x[$i] + $b[$i]");
  #$d = Compute("$h", x => $x[$i]);

  $f = Formula("$a[$i] x + $b[$i]")->reduce;
  $g = Formula("$c[$i] x + $d[$i]")->reduce;

  ## Tell WeBWorK how to evaluate the answer that the student should enter
  $answer = Compute("$x[$i]");

  #### Text for the question
  BEGIN_TEXT
  $PAR
  $idx. Solve the equation \[$f = $g.\]
  $PAR
  \(x = \) \{ans_rule(15)\}
  END_TEXT

  ANS($answer->cmp);

  ##### Intermediate quantities to create the solution
  # $e = Compute("$d[$i] - $b[$i]");
  $h = Formula("$c[$i] x + $e[$i]")->reduce;

  if ($b[$i] < 0) {
    $moveb  = "Add " . abs($b[$i]);
    $invopb = " + " . abs($b[$i]);
  } else {
    $moveb  = "Subtract " . $b[$i];
    $invopb = " - " . $b[$i];
  }

  if ($c[$i] < 0) {
    $movec  = "Add " . abs($c[$i]) . "x";
    $invopc = "\ + " . abs($c[$i]) . "x";
  } else {
    $movec  = "Subtract " . $c[$i] . "x";
    $invopc = "\ - " . $c[$i] . "x";
  }

  #### Text for the solution
  BEGIN_SOLUTION
  \begin{align}
  $f &= $g \\
  $f \color{$solcol}{$invopb} &= $g \color{$solcol}{$invopb} \tag*{$moveb}\\
  $a[$i] x &= $h \tag*{$clt}\\
  $a[$i] x {\color{$solcol}{$invopc}} &= $h {\color{$solcol}{$invopc}} \tag*{$movec} \\
  $offset[$i] x &= $e[$i] \tag*{$clt}\\
  \frac{$offset[$i] x}{\color{$solcol}{$offset[$i]}} &= \frac{$e[$i]}{\color{$solcol}{$offset[$i]}} \tag*{Divide by $offset[$i]}\\
  \color{$solcol}{x} &\color{$solcol}{=} \color{$solcol}{$answer}
  \end{align}
  END_SOLUTION
}

ENDDOCUMENT();  #This MUST be the final line of the file.