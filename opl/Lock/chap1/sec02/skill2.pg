## DESCRIPTION
## University of Wisconsin-La Crosse Problem Library Template
## For assistance, contact Sam Morris at <smorris@uwlax.edu>
## or Robert Allen at <rallen@uwlax.edu>
## ENDDESCRIPTION

## DBsubject(Statistics)
## DBchapter(Sample survey methods)
## DBsection(Concepts)
## KEYWORDS('data')
## TitleText1('Statistics: Unlocking the Power of Data')
## EditionText1('1')
## AuthorText1('Lock, Lock, Lock, Lock, Lock')
## Chapter1('1')
## Section1('1.2')
## Problem1('Skill Builder 3')
## Author('Sam Morris')
## Institution('University of Wisconsin-La Crosse')

DOCUMENT();   #This MUST be the first (non-commented) line of the file.
loadMacros("uwlLoadWWMacros.pl",
           "uwlLoadMacros.pl",
);

TEXT(beginproblem());
$refreshCachedImages=0;
$submission = $inputs_ref->{previewAnswers};

if($displayMode eq "TeX"){
  $anssep = "\( \\ \noindent \)";
  $extrasep = "\( \noindent \)";
  $tab = "\( \qquad \)";
  $BBQ = '';
  $EBQ = '';
} else {
  $extrasep = $PAR;
  $anssep = $PAR;
  $tab = '&nbsp; &nbsp; &nbsp;';
  $BBQ = '<blockquote>';
  $EBQ = '</blockquote>';
}

###########################
## Question setup
###########################
Context("Numeric");

$exercise_a = 'To estimate the proportion of Americans who support changing '.
              'the drinking age from 21 to 18, a random sample of 100 college '.
              'students are asked the question "Would you support a measure '.
              'to lower the drinking age from 21 to 18?"';
$sample_a = 'The 100 selected college students';
$population_a = 'All Americans';
$true_population_a = 'All college students';

$exercise_b = 'To investigate the growth of the canine population in New York '.
              'City, 100 dogs are randomly selected from a registry of '.
              'licensed pets in the city, and the researchers record whether '.
              'or not the dog is spayed or neutered.';
$sample_b = 'The 100 selected dogs';
$population_b = 'The canine population in New York City';
$true_population_b = 'The registered canine population in New York City';

$exercise_c = 'To investigate interest across all residents of the US in a '.
              'new type of ice skate, a random sample of 1500 people in '.
              'Minnesota are asked about their interest in the product.';
$sample_c = 'The 1500 selected people';
$population_c = 'All residents of the US';
$true_population_c = 'All residents of Minnesota';

$exercise_d = 'To determine the height distribution of female high school '.
              'students, the rosters are collected from 20 randomly selected '.
              'high school girls basketball teams.';
$sample_d = 'The 20 randomly selected high school girls';
$population_d = 'All female high school students';
$true_population_d = 'All female high school basketball players';

# Arrays for the question options to make it easy to randomize
@exercises = (
  $exercise_a,
  $exercise_b,
  $exercise_c,
  $exercise_d
);

@samples = (
  $sample_a,
  $sample_b,
  $sample_c,
  $sample_d
);

@populations = (
  $population_a,
  $population_b,
  $population_c,
  $population_d
);

@true_populations = (
  $true_population_a,
  $true_population_b,
  $true_population_c,
  $true_population_d
);

# Now select the exercise at random
($random_1, $random_2) = NchooseK(($#exercises + 1), 2);

$text_1 = $exercises[$random_1];
$sample_1 = $samples[$random_1];
$population_1 = $populations[$random_1];
$true_population_1 = $true_populations[$random_1];

$text_2 = $exercises[$random_2];
$sample_2 = $samples[$random_2];
$population_2 = $populations[$random_2];
$true_population_2 = $true_populations[$random_2];

# Get a randomly permuted order for the options
@base_options_1 = ($sample_1, $population_1, $true_population_1);
@base_options_2 = ($sample_2, $population_2, $true_population_2);

# To fully permute the array, you need to 
@order_1 = NchooseK(($#base_options_1 + 1), ($#base_options_1 + 1));
do {
  @order_2 = NchooseK(($#base_options_2 + 1), ($#base_options_2 + 1));
} until ($order_1[0] != $order_2[0]);

@options_1 = ('?', @base_options_1[@order_1]);
@options_2 = ('?', @base_options_2[@order_2]);

$s1 = PopUp(
  [@options_1],
  $sample_1,
);
$p1 = PopUp(
  [@options_1],
  $population_1,
);
$tp1 = PopUp(
  [@options_1],
  $true_population_1,
);

$s2 = PopUp(
  [@options_2],
  $sample_2,
);
$p2 = PopUp(
  [@options_2],
  $population_2,
);
$tp2 = PopUp(
  [@options_2],
  $true_population_2,
);

###########################
## Question for display
###########################
Context()->normalStrings;
$showPartialCorrectAnswers = 0;

BEGIN_TEXT
In the following exercises, a biased sampling situation is described. In each 
case identify a) the sample, b) the desired population of interest, and c) the 
true population to which we can generalize based on the sample.
\{ BeginList( "OL", type=>"1") \}
  $ITEM $text_1
  \{ BeginList( "OL", type=>"a") \}
    $ITEM Sample: \{ $s1->menu() \}
    $ITEM Desired population: \{ $p1->menu() \}
    $ITEM True population: \{ $tp1->menu() \}
  \{ EndList( "OL" ) \}
  $ITEM $text_2
  \{ BeginList( "OL", type=>"a") \}
    $ITEM Sample: \{ $s2->menu() \}
    $ITEM Desired population: \{ $p2->menu() \}
    $ITEM True population: \{ $tp2->menu() \}
  \{ EndList( "OL" ) \}
\{ EndList( "OL") \}
END_TEXT

###########################
## Answer Section
###########################
ANS($s1->cmp());
ANS($p1->cmp());
ANS($tp1->cmp());
ANS($s2->cmp());
ANS($p2->cmp());
ANS($tp2->cmp());

ENDDOCUMENT();  #This MUST be the final line of the file.