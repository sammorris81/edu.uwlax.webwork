## DESCRIPTION
## University of Wisconsin-La Crosse Problem Library Template
## For assistance, contact Sam Morris at <smorris@uwlax.edu>
## or Robert Allen at <rallen@uwlax.edu>
## ENDDESCRIPTION

## DBsubject(Statistics)
## DBchapter(Exploratory data analysis/descriptive statistics)
## DBsection(Summary statistics)
## KEYWORDS('describing data', 'quantitative variables', 'spread')
## TitleText1('Statistics: Unlocking the Power of Data')
## EditionText1('1')
## AuthorText1('Lock, Lock, Lock, Lock, Lock')
## Chapter1('2')
## Section1('2.3')
## Problem1('Skill Builder 2')
## Author('Sam Morris')
## Institution('University of Wisconsin-La Crosse')

DOCUMENT();   #This MUST be the first (non-commented) line of the file.
loadMacros("uwlLoadWWMacros.pl",
           "uwlLoadMacros.pl",
);

TEXT(beginproblem());
$refreshCachedImages=0;
$submission = $inputs_ref->{previewAnswers};

if($displayMode eq "TeX"){
  $anssep = "\( \\ \noindent \)";
  $extrasep = "\( \noindent \)";
} else {
  $extrasep = $PAR;
  $anssep = $PAR;
}

Context("Numeric");

###########################
## Question setup
###########################
@options = ('?', 'Histogram A', 'Histogram B', 'Histogram C');
@sds = (1, 3, 5);

# Now select the order at random
($random_1, $random_2, $random_3) = NchooseK(($#options + 1), ($#options + 1));

# The data sets are always ordered in A, B, C order no matter the SD.
$quant_1 = new DataGenUWL(
  datatype => 'single_quant',
  n => 400,
  mean => 10,
  sd => $sds[$random_1],
  skew => 0,
  name => "A",
  randomsummary => "F",
);

$quant_2 = new DataGenUWL(
  datatype => 'single_quant',
  n => 400,
  mean => 10,
  sd => $sds[$random_2],
  skew => 0,
  name => "B",
  randomsummary => "F",
);

$quant_3 = new DataGenUWL(
  datatype => 'single_quant',
  n => 400,
  mean => 10,
  sd => $sds[$random_3],
  skew => 0,
  name => "C",
  randomsummary => "F",
);

# Histograms are also always ordered in A, B, C
$xmin = -5;
$xmax = 25;

$hist_1 = StatGraphicsUWL::histogram(
  data => $quant_1,
  xmin => $xmin,
  xmax => $xmax,
  main => $options[1]
);

$hist_2 = StatGraphicsUWL::histogram(
  data => $quant_2,
  xmin => $xmin,
  xmax => $xmax,
  main => $options[2]
);

$hist_3 = StatGraphicsUWL::histogram(
  data => $quant_3,
  xmin => $xmin,
  xmax => $xmax,
  main => $options[3]
);

# The questions are asked in the order of @sds -- 1, 3, 5. So, we need to loop
# through the randomized sds to figure out how to order the histogram names.
@correct_answer_idx = ();
for (0..$#sds) {
  if ($sds[$_] == $sds[$random_1]) {
    push(@correct_answer_idx, 1);
  } elsif ($sds[$_] == $sds[$random_2]) {
    push(@correct_answer_idx, 2);
  } else {
    push(@correct_answer_idx, 3);
  }
}

# In this case, the correct answer should be the histogram with sd = 1
$q_1 = PopUp(
  [@options],
  $options[$correct_answer_idx[0]],
);

# In this case, the correct answer should be the histogram with sd = 3
$q_2 = PopUp(
  [@options],
  $options[$correct_answer_idx[1]],
);

# In this case, the correct answer should be the histogram with sd = 5
$q_3 = PopUp(
  [@options],
  $options[$correct_answer_idx[2]],
);

Context()->normalStrings;
$showPartialCorrectAnswers = 0;

###########################
## Question for display
###########################
BEGIN_TEXT
Use these histograms to answer the following questions.
$PAR
$BCENTER
  \{ image($hist_1, width=>300, height=>300, tex_size=>300) \}
  \{ image($hist_2, width=>300, height=>300, tex_size=>300) \}
  \{ image($hist_3, width=>300, height=>300, tex_size=>300) \}
$ECENTER
\{ BeginList( "OL", type=>"1") \}
  $ITEM Which histogram has a standard deviation closest to 1? 
    \{ $q_1->menu() \}
  $ITEM Which histogram has a standard deviation closest to 3? 
    \{ $q_2->menu() \}
  $ITEM Which histogram has a standard deviation closest to 5? 
    \{ $q_3->menu() \}
\{ EndList( "OL") \}
END_TEXT

###########################
## Answer Section
###########################

ANS($q_1->cmp());
ANS($q_2->cmp());
ANS($q_3->cmp());

ENDDOCUMENT();  #This MUST be the final line of the file.