## DESCRIPTION
## University of Wisconsin-La Crosse Problem Library Template
## For assistance, contact Sam Morris at <smorris@uwlax.edu>
## or Robert Allen at <rallen@uwlax.edu>
## ENDDESCRIPTION

## DBsubject(Statistics)
## DBchapter(Confidence intervals)
## DBsection(Concepts)
## KEYWORDS('understanding inference', 'confidence intervals', 'constructing bootstrap confidence intervals')
## TitleText1('Statistics: Unlocking the Power of Data')
## EditionText1('1')
## AuthorText1('Lock, Lock, Lock, Lock, Lock')
## Chapter1('3')
## Section1('3.3')
## Problem1('Skill Builder 2')
## Author('Sam Morris')
## Institution('University of Wisconsin-La Crosse')

DOCUMENT();   #This MUST be the first (non-commented) line of the file.
loadMacros("uwlLoadWWMacros.pl",
           "uwlLoadMacros.pl",
);

TEXT(beginproblem());
$refreshCachedImages=0;
$submission = $inputs_ref->{previewAnswers};

if($displayMode eq "TeX"){
  $anssep = "\( \\ \noindent \)";
  $extrasep = "\( \noindent \)";
  $tab = "\( \qquad \)";
  $BBQ = '';
  $EBQ = '';
} else {
  $extrasep = $PAR;
  $anssep = $PAR;
  $tab = '&nbsp; &nbsp; &nbsp;';
  $BBQ = '<blockquote>';
  $EBQ = '</blockquote>';
}

###########################
## Question setup
###########################
Context("Numeric");

$n1 = 400;
@nlevels1 = (2);
@probs1 = (0.70, 0.30);
$cat1 = new DataGenUWL(
  datatype => 'one_cat',
  n => $n1,
  nlevels => [@nlevels1],
  probs => [@probs1],
  random => "T",
);

@probs1 = @{$cat1->{probs}};
$prop1 = Real(sprintf("%.4f", $probs1[0]));

$bsprops = new DataGenUWL(
  datatype => 'bs_one_cat',
  data => $cat1,
  N => 1000,
  name => "A",
);

$se1 = Real(sprintf("%.3f", $bsprops->{sd}));
$lower1 = Real($prop1 - 2 * $se1);
$upper1 = Real($prop1 + 2 * $se1);

$hist1 = StatGraphicsUWL::histogram(
  data => $bsprops,
  main => "Histogram A",
  round => 3,
  summaries => "T"
);

$n2 = 40;
$quant2 = new DataGenUWL(
  datatype => 'single_quant',
  n => $n2,
  mean => 60,
  sd => 20,
  round => 0,
  name => "B"
);

$mean2 = sprintf("%.3f", $quant2->{mean});

$bsmeans = new DataGenUWL(
    datatype => 'bs_one_mean',
    data => $quant2,
    N => 1000,
    name => "B",
);

$se2 = Real(sprintf("%.3f", $bsmeans->{sd}));
$lower2 = Real($mean2 - 2 * $se2);
$upper2 = Real($mean2 + 2 * $se2);

$hist2 = StatGraphicsUWL::histogram(
  data => $bsmeans,
  main => "Histogram B",
  round => 3,
  summaries => "T"
);

@notation = ( # choices
  " \( p \)",
  " \( \widehat{p} \)",
  " \( \mu \)",
  " \( \overline{x} \)",
);

$mc1 = RadioButtons(
  [@notation],
  " \( p \)",
  order => [@notation],
  labels => ['i', 'ii', 'iii', 'iv'],
  separator => $tab,
);

$mc2 = RadioButtons(
  [@notation],
  " \( \mu \)",
  order => [@notation],
  labels => ['i', 'ii', 'iii', 'iv'],
  separator => $tab,
);

###########################
## Question for display
###########################
Context()->normalStrings;
$showPartialCorrectAnswers = 1;

BEGIN_TEXT
$PAR
Use these histograms to answer the following questions.
$PAR
$BCENTER
  \{ image($hist1, width=>300, height=>300, tex_size=>300) \}
  \{ image($hist2, width=>300, height=>300, tex_size=>300) \}
$ECENTER
\{ BeginList("OL", type=>"1") \}
  $ITEM Histogram A is a bootstrap distribution of 1000 bootstrap samples generated
  from a sample where the sample proportion is \( \widehat{p} = $prop1 \). Give
  your answers to 4 decimal places.
  \{ BeginList("OL", type=>"a") \}
    $ITEM Using the summary information given in the histogram, provide an estimate
    of the standard error of \( \widehat{p} \). \{ ans_rule(10) \}
    $ITEM Give a 95$PERCENT confidence interval for the parameter of interest.
    ( \{ ans_rule(10) \}, \{ ans_rule(10) \})
    $ITEM What is the correct notation for the parameter of interest? $BR
    \{ $mc1->buttons() \}
  \{ EndList("OL") \}
  $PAR
  $ITEM Histogram B is a bootstrap distribution of 1000 bootstrap samples generated
  from a sample where the sample average is \( \overline{x} = $mean2 \). Give your
  answers to 4 decimal places.
  \{ BeginList("OL", type=>"a") \}
    $ITEM Using the summary information given in the histogram, provide an estimate
    of the standard error of \( \overline{x} \). \{ ans_rule(10) \}
    $ITEM Give a 95$PERCENT confidence interval for the parameter of interest.
    ( \{ ans_rule(10) \}, \{ ans_rule(10) \})
    $ITEM What is the correct notation for the parameter of interest? $BR
    \{ $mc2->buttons() \}
  \{ EndList("OL") \}
\{ EndList("OL") \}
END_TEXT

###########################
## Hint for display
###########################
$showHint = 3;
BEGIN_HINT
$BBOLD Finding the standard error using the sampling distribution:$EBOLD $BR
Take a look at example 3.21 in your textbook. When the authors find the
standard error for the statistic, they use the standard deviation of the
bootstrap statistics given on the dotplot for the bootstrap distribution in
Figure 3.17. The histograms shown above are just like these dotplots.
$PAR
$BBOLD Finding the confidence interval:$EBOLD
Once you have found the standard error, the process to find the confidence 
interval is very straightforward. As outlined on p. 235, when the bootstrap 
distribution is symmetric and bell-shaped, we estimate a 95$PERCENT confidence
interval using
\[
  \text{Statistic} \pm 2 \cdot \text{Standard Error}.
\]
Note, that the confidence interval formula uses the statistic from the
sample, ${BITALIC}not${EITALIC} the average of the bootstrap distribution.
For a fully worked out example, see Example 3.22 in your book.
END_HINT

###########################
## Answer Section
###########################
ANS($se1->with(tolerance=>0.001, tolType=>"Absolute")->cmp());
ANS($lower1->cmp(
  checker=>sub {
    my ($correct, $student, $self) = @_;

    if (($student eq '' || $submission eq 'Preview Answers')) {
      # Don't give a message if not answered.
      return 0;
    }

    my $wrong = $bsprops->{mean} - 2 * $se1;
    my $tol = 0.001;
    my $compans = abs($student - $correct);

    if ($compans <= $tol) {
      # $self->{ans_message} = ('This is correct.');
      return 1;
    } elsif (abs($student - $wrong) <= $tol) {
      Value->Error("Make sure to use the statistic from the sample not the ".
                   "bootstrap distribution");
      return 0.5;
    } else {
      Value->Error('This is incorrect.');
    }
  }
  )
);
ANS($upper1->cmp(
  checker=>sub {
    my ($correct, $student, $self) = @_;

    if (($student eq '' || $submission eq 'Preview Answers')) {
      # Don't give a message if not answered.
      return 0;
    }

    my $wrong = $bsprops->{mean} + 2 * $se1;
    my $tol = 0.001;
    my $compans = abs($student - $correct);

    if ($compans <= $tol) {
      # $self->{ans_message} = ('This is correct.');
      return 1;
    } elsif (abs($student - $wrong) <= $tol) {
      Value->Error("Make sure to use the statistic from the sample not the ".
                   "bootstrap distribution");
      return 0.5;
    } else {
      Value->Error('This is incorrect.');
    }
  }
  )
);
ANS($mc1->cmp());

ANS($se2->with(tolerance=>0.001, tolType=>"Absolute")->cmp());
ANS($lower2->cmp(
  checker=>sub {
    my ($correct, $student, $self) = @_;

    if (($student eq '' || $submission eq 'Preview Answers')) {
      # Don't give a message if not answered.
      return 0;
    }

    my $wrong = $bsmeans->{mean} - 2 * $se2;
    my $tol = 0.001;
    my $compans = abs($student - $correct);

    if ($compans <= $tol) {
      # $self->{ans_message} = ('This is correct.');
      return 1;
    } elsif (abs($student - $wrong) <= $tol) {
      Value->Error("Make sure to use the statistic from the sample not the ".
                   "bootstrap distribution");
      return 0.5;
    } else {
      Value->Error('This is incorrect.');
    }
  }
  )
);

ANS($upper2->cmp(
  checker=>sub {
    my ($correct, $student, $self) = @_;

    if (($student eq '' || $submission eq 'Preview Answers')) {
      # Don't give a message if not answered.
      return 0;
    }

    my $wrong = $bsmeans->{mean} + 2 * $se2;
    my $tol = 0.001;
    my $compans = abs($student - $correct);

    if ($compans <= $tol) {
      # $self->{ans_message} = ('This is correct.');
      return 1;
    } elsif (abs($student - $wrong) <= $tol) {
      Value->Error("Make sure to use the statistic from the sample not the ".
                   "bootstrap distribution");
      return 0.5;
    } else {
      Value->Error('This is incorrect.');
    }
  }
  )
);
ANS($mc2->cmp());
ENDDOCUMENT();  #This MUST be the final line of the file.