## DESCRIPTION
## University of Wisconsin-La Crosse Problem Library Template
## For assistance, contact Sam Morris at <smorris@uwlax.edu>
## or Robert Allen at <rallen@uwlax.edu>
## ENDDESCRIPTION

## DBsubject(Statistics)
## DBchapter(Confidence intervals)
## DBsection(Concepts)
## KEYWORDS('understanding inference', 'confidence intervals', 'constructing bootstrap confidence intervals')
## TitleText1('Statistics: Unlocking the Power of Data')
## EditionText1('1')
## AuthorText1('Lock, Lock, Lock, Lock, Lock')
## Chapter1('3')
## Section1('3.3')
## Problem1('Skill Builder 3')
## Author('Sam Morris')
## Institution('University of Wisconsin-La Crosse')

DOCUMENT();   #This MUST be the first (non-commented) line of the file.
loadMacros("uwlLoadWWMacros.pl",
           "uwlLoadMacros.pl",
);

TEXT(beginproblem());
$refreshCachedImages=0;
$submission = $inputs_ref->{previewAnswers};

if($displayMode eq "TeX"){
  $anssep = "\( \\ \noindent \)";
  $extrasep = "\( \noindent \)";
  $tab = "\( \qquad \)";
} else {
  $extrasep = $PAR;
  $anssep = $PAR;
  $tab = '&nbsp; &nbsp; &nbsp;';
}

Context("Numeric");

$n1 = random(90, 110, 1);
$agree1 = random(30, 40, 1);
$disagree1 = $n1 - $agree1;

@nlevels1 = (2);
@freqs1 = ($agree1, $disagree1);
$cat1 = new DataGenUWL(
  datatype => 'one_cat',
  n => $n1,
  nlevels => [@nlevels1],
  freqs => [@freqs1],
  random => "F",
);

$bsprops1 = new DataGenUWL(
  datatype => 'bs_one_cat',
  data => $cat1,
  N => 500,
  name => "A",
);

$phat1 = Real($agree1 / $n1);
$se1 = Real($bsprops1->{sd});
$lower1 = Real($phat1 - 2 * $se1);
$upper1 = Real($phat1 + 2 * $se1);

$hist = rserve_start_plot('png', $width, $height);
$data1 = QuantitativeUWL::disp_r(@{$bsprops1->{x}});

rserve_eval('data1 <- ' . $data1 .'
  xmax <- max(data1) + diff(range(data1)) * 0.4
  xmin <- min(data1)
  par(mar = c(2, 4, 2, 1) + 0.1)
  data1.mean <- round(mean(data1), 4)
  data1.sd   <- round(sd(data1), 4)
  data1.n    <- length(data1)
  hist(data1, main = "Histogram A", xlim = c(xmin, xmax), xlab = "")
  legend("topright", legend = c(paste("mean =", data1.mean),
                              paste("sd =", data1.sd),
                              paste("n = ", data1.n)),
       bty = "n")');
$hist1 = rserve_finish_plot($hist);

$agree2 = random(350, 400, 1);
$disagree2 = random(550, 600, 1);
$neutral2 = random(30, 50, 1);
$n2 = $agree2 + $disagree2 + $neutral2;

@nlevels2 = (3);
@freqs2 = ($agree2, $disagree2, $neutral2);
$cat2 = new DataGenUWL(
  datatype => 'one_cat',
  n => $n2,
  nlevels => [@nlevels2],
  freqs => [@freqs2],
  random => "F",
);

$bsprops2 = new DataGenUWL(
    datatype => 'bs_one_cat',
    data => $cat2,
    N => 500,
    name => "B",
);

$phat2 = Real($agree2 / $n2);
$se2 = Real($bsprops2->{sd});
$lower2 = Real($phat2 - 2 * $se2);
$upper2 = Real($phat2 + 2 * $se2);

$hist = rserve_start_plot('png', $width, $height);
$data2 = QuantitativeUWL::disp_r(@{$bsprops2->{x}});

rserve_eval('data2 <- ' . $data2 .'
  xmax <- max(data2) + diff(range(data2)) * 0.4
  xmin <- min(data2)
  par(mar = c(2, 4, 2, 1) + 0.1)
  data2.mean <- round(mean(data2), 4)
  data2.sd   <- round(sd(data2), 4)
  data2.n    <- length(data2)
  hist(data2, main = "Histogram B", xlim = c(xmin, xmax), xlab = "")
  legend("topright", legend = c(paste("mean =", data2.mean),
                              paste("sd =", data2.sd),
                              paste("n = ", data2.n)),
       bty = "n")');
$hist2 = rserve_finish_plot($hist);

###########################
## Initialization
###########################

Context()->normalStrings;
$showPartialCorrectAnswers = 0;

###########################
## Answer Section
###########################
BEGIN_TEXT
These two questions give information about the proportion of a sample that agrees
with a certain statement. Use the information given, along with these histograms
to answer the following questions.
$PAR
$BCENTER
  \{ image($hist1, width=>300, height=>300, tex_size=>300) \}
  \{ image($hist2, width=>300, height=>300, tex_size=>300) \}
$ECENTER
\{ BeginList("OL", type=>"1") \}
  $ITEM In a random sample of $n1 people, $agree1 agree. Histogram A is a bootstrap
  distribution of 500 bootstrap samples generated from this sample. Give your answers
  to 4 decimal places.
  \{ BeginList("OL", type=>"a") \}
    $ITEM What is the best estimate for the proportion of the population that agrees
    with the statement? \{ ans_rule(10) \}
    $ITEM Using the summary information given in the histogram, provide an estimate
    of the standard error of \( \widehat{p} \). \{ ans_rule(10) \}
    $ITEM Give a 95$PERCENT confidence interval for the proportion of the population
    that agrees with the statement. ( \{ ans_rule(10) \}, \{ ans_rule(10) \})
  \{ EndList("OL") \}
  $PAR
  $ITEM In a random sample of $n2 people, $agree2 agree, $disagree2 disgagree, and
  $neutral2 are undecided. Histogram B is a bootstrap distribution of 500 bootstrap
  samples generated from this sample. Give your answers to 4 decimal places.
  \{ BeginList("OL", type=>"a") \}
    $ITEM What is the best estimate for the proportion of the population that agrees
    with the statement? \{ ans_rule(10) \}
    $ITEM Using the summary information given in the histogram, provide an estimate
    of the standard error of \( \widehat{p} \). \{ ans_rule(10) \}
    $ITEM Give a 95$PERCENT confidence interval for the proportion of the population
    that agrees with the statement. ( \{ ans_rule(10) \}, \{ ans_rule(10) \})
  \{ EndList("OL") \}
\{ EndList("OL") \}
END_TEXT

###########################
## Answer Section
###########################
ANS($phat1->with(tolerance=>0.001, tolType=>"Absolute")->cmp());
ANS($se1->with(tolerance=>0.001, tolType=>"Absolute")->cmp());
ANS($lower1->with(tolerance=>0.001, tolType=>"Absolute")->cmp());
ANS($upper1->with(tolerance=>0.001, tolType=>"Absolute")->cmp());

ANS($phat2->with(tolerance=>0.001, tolType=>"Absolute")->cmp());
ANS($se2->with(tolerance=>0.001, tolType=>"Absolute")->cmp());
ANS($lower2->with(tolerance=>0.001, tolType=>"Absolute")->cmp());
ANS($upper2->with(tolerance=>0.001, tolType=>"Absolute")->cmp());

ENDDOCUMENT();  #This MUST be the final line of the file.